import json
from datetime import datetime
import streamlit as st


class TaskFlowApp:
    def __init__(self):
        self.setup_navigation()
        self.current_page = st.session_state.get("page", "main")

    def setup_navigation(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ

        page = st.sidebar.radio(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É:",
            ["–ì–ª–∞–≤–Ω–∞—è", "–ê–¥–º–∏–Ω"],
            key="page_selector"
        )
        st.session_state.page = page

    def main_page(self):
        st.header(":blue[TaskFlowBot] - –º–∏–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è IT-–ø–æ–¥–¥–µ—Ä–∂–∫–∏", divider="rainbow")

        with st.form("task_form"):
            task_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏", placeholder="–û–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ –ø—Ä–æ–±–ª–µ–º—É")
            task_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ", placeholder="–î–µ—Ç–∞–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã")

            if st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å"):
                if task_name != "" and task_description != "":
                    self.save_task(task_name, task_description, "task_flow.json")
                    st.success("–ó–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
                else:
                    st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!")

    def save_task(self, name, description, file_path):
        try:
            # –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            try:
                with open(file_path, 'r') as f:
                    self.data = json.load(f)
            except (FileNotFoundError, json.JSONDecodeError):
                self.data = []

            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ ID
            current_increment = max(task['id'] for task in self.data) + 1 if self.data else 1

            # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
            task_dict = {
                "id": current_increment,
                "name": name.strip(),
                "description": description.strip(),
                "timestamp": st.session_state.get("current_time")
            }

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
            self.data.append(task_dict)
            with open(file_path, 'w') as f:
                json.dump(self.data, f, indent=2, ensure_ascii=False)

        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {str(e)}")

    def run(self):
        if st.session_state.page == "–ì–ª–∞–≤–Ω–∞—è":
            self.main_page()
        elif st.session_state.page == "–ê–¥–º–∏–Ω":
            st.switch_page("pages/admin.py")


def main():
    st.set_page_config(
        page_title="TaskFlow",
        page_icon="üìã",
        layout="wide"
    )

    # –ê–Ω–∏–º–∞—Ü–∏—è —Å–Ω–µ–≥–∞
    with st.spinner("–ü–∞–¥–∞—é—â–∏–µ —Å–Ω–µ–∂–∏–Ω–∫–∏..."):
        st.snow()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏
    if "current_time" not in st.session_state:
        st.session_state.current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    TaskFlowApp().run()


if __name__ == "__main__":
    main()